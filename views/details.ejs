<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Контрольный лист '<%= part['prod_name'] %>'</title>
  <!--для слайдера-->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
    crossorigin="anonymous"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <!--для слайдера-->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
  <script src="/main.js"></script>
</head>

<style>
  .form-control {
    appearance: revert;
  }
</style>

<body style='overflow-x:hidden;'>
  <nav class="navbar navbar-light" style="background-color: #e3f2fd; font-size: 30px;">
    <div class="container-fluid">
      <a class="navbar-brand" href="/" style="font-size: 30px;">Контрольные карты</a>
      <span class="navbar-text">
        Панаскин Алексей 201-323
      </span>

    </div>
  </nav>

  <%-include('modal.ejs') %>
  
  <div class="row row-cols-2 row-cols-md-2" style="padding: 1%; font-size:30px;">

    <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
      <div class="carousel-inner">
        <div class="carousel-item active">
          <img src='/storage/<%= part['prod_file']%>' class="card-img-top" alt="<%= part['prod_file']%>">
        </div>
        <div class="carousel-item">
          <div id="factData" class="modal-split">
            <h2>Фактические характеристики и показатели </h2>
            <table id="factTable" class="table">
              <thead>
                <tr>
                  <% for (let i=0; i < table[0].values.length; i++) { %>
                    <th>
                      <%= table[0].values[i] %>
                    </th>
                    <% } %>
                </tr>
              </thead>
              <tbody>
                <% for (let i=1; i < table.length; i++) { %>
                  <% if(table[i].isDefect==true) { %>
                    <tr style="background-color: rgb(255, 150, 150);">
                      <% } else if(table[i].isDefect==false) { %>
                    <tr style="background-color: rgb(145, 255, 145);">
                      <% } else { %>
                    <tr>
                      <% } %>
                        <% for (let j=0; j < table[i].values.length; j++) { %>
                          <td>
                            <%= table[i].values[j] %>
                          </td>
                          <% } %>
                    </tr>
                    <% } %>
              </tbody>
            </table>
          </div>
        </div>
        <% for (let i=0; i < refs.length; i++) { %>
        <div class="carousel-item">
            <canvas class="chart"></canvas>
        </div>
        <% } %>
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls"
        data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Предыдущий</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls"
        data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Следующий</span>
      </button>
    </div>

    <div class="card-body">

      <h5 class="card-title">
        <%= part['prod_name'] %>
      </h5>
      
      <button id="btn_delete" data-id="<%= part['id'] %>" type="button" class="btn btn-danger">
        Удалить
      </button>

      <button id="btn_edit" type="button" class="btn btn-warning" data-toggle="modal" data-target="#myModal" onclick="fillValues()">
        Редактировать
      </button>

      <p class="card-text">
        <%= part['prod_text']%> - <%= part['prod_code'] %>
      </p>
      <p class="card-text">
        <%= part['employee_name']%> - <%= part['employee_role'] %> - <%= new
              Date(part['report_date']).toLocaleDateString('ru-RU') %>
      </p>
      <p class="card-text">Разработано - <%= part['prod_developer']%> - <%= new
            Date(part['prod_develop_date_start']).toLocaleDateString('ru-RU') %>
      </p>
      <p class="card-text">Изготовлено - <%= part['prod_releaser']%> - <%= new
            Date(part['prod_develop_date_end']).toLocaleDateString('ru-RU') %>
      </p>
      <p class="card-text">Назначение и область применения продукции: <%= part['prod_description']%>
      </p>
      <p class="card-text">Характеристка продукции:</p>
      <p class="card-text">
        <%= part['prod_chr1']%>
      </p>
      <p class="card-text">
        <%= part['prod_chr2']%>
      </p>
    </div>
</body>
</html>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js">
</script>

<script>
  let btnDelete = document.getElementById("btn_delete");

  btnDelete.addEventListener("click", e => {
    let ok = confirm("Удалить деталь?");

    if (!ok) {
      return;
    }

    let id = btnDelete.dataset.id;

    fetch(`/delete/${id}`, {
      method: "DELETE"
    })
    .then(r => {
      if (!r.ok) {
        return Promise.reject(r.statusText)
      }

      window.location.replace("/");
    })
    .catch(err => {
      alert("Не удалось удалить деталь");
      console.error(err);
    })
  })
</script>


<script>
  let refs = JSON.parse('<%-JSON.stringify(refs) %>');
  let facts = JSON.parse('<%-JSON.stringify(facts) %>');
  let part = JSON.parse('<%-JSON.stringify(part) %>');

  for (let i = 0; i < refs.length; i++) {
    const ctx = document.getElementsByClassName("chart")[i].getContext('2d');

    const data = {
      labels: Array.from({length: facts.length}, (_, i) => i + 1),
      datasets: [{
        type: 'bar',
        label: 'Фактические значения',
        // data: facts.map((f, j) => { return { x: j + 1, y: f.values[i] } }),
        data: facts.map((f, j) => f.values[i]),
        backgroundColor: 'rgb(255, 99, 132)',
        backgroundColor: facts.map(fact => fact['is_defect'] || Math.abs(fact.values[i] - refs[i]['value']) - refs[i]['threshold'] <= 0.00000001 ? 'rgba(48, 255, 104, 0.4)' : 'rgba(249, 66, 53, 0.4)')
      },
      {
        type: 'line',
        label: 'Верхний допуск',
        data: Array(facts.length).fill(refs[i].value + refs[i].threshold),
        fill: false,
        borderColor: '#FFC373'
      },
      {
        type: 'line',
        label: 'Эталонное значение',
        data: Array(facts.length).fill(refs[i].value),
        fill: false,
        borderColor: '#D089FF'
      }, 
      {
        type: 'line',
        label: 'Нижний допуск',
        data: Array(facts.length).fill(refs[i].value - refs[i].threshold),
        fill: false,
        borderColor: '#FFC373'
      }]
  };
    const myChart = new Chart(ctx, {
    type: 'bar',
    data: data,
    options: {
      scales: {
        yAxes: [{
            display: true,
            ticks: {
                suggestedMin: refs[i].value * 0.99,
                suggestedMax: refs[i].value * 1.01,
            },
            scaleLabel: {
            display: true,
            labelString: refs[i].name
          }
        }]
    }
    }
  });
  }


</script>